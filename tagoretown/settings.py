"""
Django settings for tagoretown project.

Generated by 'django-admin startproject' using Django 1.9.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""

import os
from database_conf import *

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'h3*+7bz2u680i$@jkr!s-28k@@fz!9w_4l*w3zu(wj@ow7_*-s'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition


INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    #   'pipeline',
    'oam.apps.OAMConfig',
]

MIDDLEWARE_CLASSES = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'tagoretown.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'tagoretown.wsgi.application'



# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME':
        'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME':
        'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME':
        'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME':
        'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'EST'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/
#STATIC_ROOT = os.path.join(BASE_DIR, 'static/')
STATIC_URL = '/static/'
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'static/'),
    #os.path.join(BASE_DIR, 'assets/'),
)

#STATICFILES_STORAGE = 'pipeline.storage.PipelineStorage'
# STATICFILES_FINDERS = (
#     'django.contrib.staticfiles.finders.FileSystemFinder',
#     'django.contrib.staticfiles.finders.AppDirectoriesFinder',
#     'pipeline.finders.PipelineFinder',
# )

# PIPELINE = {
#     'PIPELINE_ENABLED': True,
#     'STYLESHEETS': {
#         'app': {
#             'source_filenames': (
#                 'app/css/*.css',
#             ),
#             'output_filename': 'css/app.css',
#             'extra_context': {
#                 'media': 'screen,projection',
#             },
#         },
#         'vendor': {
#             'source_filenames': (
#                 'bootstrap/css/bootstrap.css',
#                 'fontawesome/css/font-awesome.css',
#             ),
#             'output_filename': 'css/vendor.css',
#             'extra_context': {
#                 'media': 'screen,projection',
#             },
#         },
#     },
#     'JAVASCRIPT': {
#         'app': {
#             'source_filenames': (
#                 'app/js/*.js',
#             ),
#             'output_filename': 'js/app.js',
#             'extra_context': {
#                 'async':  True,
#             },
#         },
#         'vendor': {
#             'source_filenames': (
#                 'js/*.js',
#                 'bootstrap/js/bootstrap.js',
#             ),
#             'output_filename': 'js/vendor.js',
#             'extra_context': {
#                 'async': True,
#             }
#         }
#     },
#     'COMPILERS': (
#         'pipeline.compilers.coffee.CoffeeScriptCompiler',
#         'pipeline.compilers.sass.SASSCompiler',
#     ),
#     'STORAGE': STATICFILES_STORAGE,
#     'CSS_COMPRESSOR': 'pipeline.compressors.yuglify.YuglifyCompressor',
#     'JS_COMPRESSOR': 'pipeline.compressors.yuglify.YuglifyCompressor',
# }


#PIPELINE['CSS_COMPRESSOR'] = 'pipeline.compressors.yuglify.YuglifyCompressor'
#PIPELINE['JS_COMPRESSOR'] = 'pipeline.compressors.yuglify.YuglifyCompressor'
